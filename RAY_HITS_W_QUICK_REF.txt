╔══════════════════════════════════════════════════════════════════╗
║         📍 ray_hits_w API 代碼位置快速參考                      ║
╚══════════════════════════════════════════════════════════════════╝

您問的這一行：
「✅ 使用 ray_hits_w API (2025+ / Sim 5.0) - 手動計算距離」

═══════════════════════════════════════════════════════════════════
📁 文件位置
═══════════════════════════════════════════════════════════════════

完整路徑:
  source/isaaclab_tasks/isaaclab_tasks/manager_based/navigation/
  local_planner/mdp/observations.py

具體行號:
  ⭐ 第 44 行 ⭐

函數名稱:
  lidar_obs()  (第 21-66 行)


═══════════════════════════════════════════════════════════════════
📝 代碼內容（第 35-44 行）
═══════════════════════════════════════════════════════════════════

if hasattr(data, "ray_hits_w") and hasattr(data, "pos_w"):
    # Isaac Sim 5.0+ / Isaac Lab 2025+：需手動計算距離
    # ray_hits_w: (num_envs, num_rays, 3) - 世界座標中的射線命中點
    # pos_w: (num_envs, 3) - 世界座標中的感測器位置
    hit_points = data.ray_hits_w  # (num_envs, num_rays, 3)
    sensor_pos = data.pos_w.unsqueeze(1)  # (num_envs, 1, 3) 擴展以廣播
    
    # 計算每條射線的距離
    distances = torch.norm(hit_points - sensor_pos, dim=-1)  # (num_envs, num_rays)
    print("✅ 使用 ray_hits_w API (2025+ / Sim 5.0) - 手動計算距離")  ← 第44行


═══════════════════════════════════════════════════════════════════
🎯 這段代碼的作用
═══════════════════════════════════════════════════════════════════

功能:
  處理 Isaac Sim 5.0 的 LiDAR 感測器數據
  因為新版 API 不再直接提供距離，需要手動計算

計算邏輯:
  距離 = ||射線命中點 - 感測器位置||
  
  1. 獲取命中點: ray_hits_w [num_envs, 360, 3]
  2. 獲取感測器位置: pos_w [num_envs, 3]
  3. 計算歐幾里得距離: torch.norm(差值)
  4. 結果: distances [num_envs, 360]


═══════════════════════════════════════════════════════════════════
🔍 快速查看命令
═══════════════════════════════════════════════════════════════════

# 直接跳到第44行
vim +44 source/isaaclab_tasks/isaaclab_tasks/manager_based/navigation/\
local_planner/mdp/observations.py

# 查看整個 lidar_obs 函數（第21-66行）
sed -n '21,66p' source/isaaclab_tasks/isaaclab_tasks/manager_based/navigation/\
local_planner/mdp/observations.py

# 查看 ray_hits_w 相關代碼（第35-44行）
sed -n '35,44p' source/isaaclab_tasks/isaaclab_tasks/manager_based/navigation/\
local_planner/mdp/observations.py


═══════════════════════════════════════════════════════════════════
🗂️ 完整函數結構
═══════════════════════════════════════════════════════════════════

observations.py 文件包含:

1. lidar_obs()                      (第 21-66 行)  ← ray_hits_w 在這裡
   └─ 讀取 LiDAR 數據，兼容多版本 API

2. base_lin_vel()                   (第 69-76 行)
   └─ 機器人線速度

3. base_ang_vel()                   (第 79-86 行)
   └─ 機器人角速度

4. goal_position_in_robot_frame()   (第 89-111 行)
   └─ 目標相對位置

5. distance_to_goal()               (第 114-131 行)
   └─ 到目標的距離


═══════════════════════════════════════════════════════════════════
📊 API 版本對照
═══════════════════════════════════════════════════════════════════

Isaac Sim 5.0+ (2025+)
  └─ 使用: ray_hits_w + pos_w
  └─ 需要: 手動計算距離 ✅ (第35-44行)
  └─ 輸出信息: ✅ 使用 ray_hits_w API (2025+ / Sim 5.0)

Isaac Lab 2025.1
  └─ 使用: hit_distances
  └─ 輸出信息: ✅ 使用 hit_distances API (2025.1)

Isaac Lab 2024.1
  └─ 使用: distances
  └─ 輸出信息: ✅ 使用 distances API (2024.1)

Isaac Lab ≤2023.1
  └─ 使用: ray_distances
  └─ 輸出信息: ✅ 使用 ray_distances API (2023.1)


═══════════════════════════════════════════════════════════════════
🎓 在訓練中的使用
═══════════════════════════════════════════════════════════════════

調用路徑:

train.py
  ↓
Environment.step()
  ↓
ObservationManager.compute()
  ↓
mdp.lidar_obs()  ← 執行這裡的代碼
  ↓ (第35-44行計算距離)
  ↓
返回 LiDAR 數據 [num_envs, 360]
  ↓
組合成完整觀測 [num_envs, 369]
  ↓
傳給 Neural Network


配置位置:
  local_planner_env_cfg.py (第 166-169 行)
  
  lidar_obs = ObsTerm(
      func=mdp.lidar_obs,  ← 註冊這個函數
      params={"sensor_cfg": SceneEntityCfg("lidar")},
  )


═══════════════════════════════════════════════════════════════════
📚 相關文檔
═══════════════════════════════════════════════════════════════════

詳細說明:
  📖 RAY_HITS_W_API_LOCATION.md      ← 完整說明（推薦）
  📖 md/RAYCASTER_API_FIX.md         ← API 修復記錄
  📖 md/CODE_ARCHITECTURE_GUIDE.md   ← 代碼架構

快速參考:
  📋 本文檔 (RAY_HITS_W_QUICK_REF.txt)


═══════════════════════════════════════════════════════════════════

🎯 總結: 這行代碼在 observations.py 第44行，用於確認正在使用
         Isaac Sim 5.0 的新 API 並手動計算 LiDAR 距離

═══════════════════════════════════════════════════════════════════
